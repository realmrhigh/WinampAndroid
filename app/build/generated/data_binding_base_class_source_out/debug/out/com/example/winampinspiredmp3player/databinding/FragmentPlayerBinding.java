// Generated by view binder compiler. Do not edit!
package com.example.winampinspiredmp3player.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.winampinspiredmp3player.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPlayerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnNextTrack;

  @NonNull
  public final ImageButton btnPlayPause;

  @NonNull
  public final ImageButton btnPreviousTrack;

  @NonNull
  public final ImageButton btnToggleShufflePlayer;

  @NonNull
  public final ImageButton btnToggleVisualizer;

  @NonNull
  public final LinearLayout layoutPlayerControls;

  @NonNull
  public final SeekBar sbTrackProgress;

  @NonNull
  public final TextView tvCurrentTrackInfo;

  private FragmentPlayerBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton btnNextTrack, @NonNull ImageButton btnPlayPause,
      @NonNull ImageButton btnPreviousTrack, @NonNull ImageButton btnToggleShufflePlayer,
      @NonNull ImageButton btnToggleVisualizer, @NonNull LinearLayout layoutPlayerControls,
      @NonNull SeekBar sbTrackProgress, @NonNull TextView tvCurrentTrackInfo) {
    this.rootView = rootView;
    this.btnNextTrack = btnNextTrack;
    this.btnPlayPause = btnPlayPause;
    this.btnPreviousTrack = btnPreviousTrack;
    this.btnToggleShufflePlayer = btnToggleShufflePlayer;
    this.btnToggleVisualizer = btnToggleVisualizer;
    this.layoutPlayerControls = layoutPlayerControls;
    this.sbTrackProgress = sbTrackProgress;
    this.tvCurrentTrackInfo = tvCurrentTrackInfo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_next_track;
      ImageButton btnNextTrack = ViewBindings.findChildViewById(rootView, id);
      if (btnNextTrack == null) {
        break missingId;
      }

      id = R.id.btn_play_pause;
      ImageButton btnPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (btnPlayPause == null) {
        break missingId;
      }

      id = R.id.btn_previous_track;
      ImageButton btnPreviousTrack = ViewBindings.findChildViewById(rootView, id);
      if (btnPreviousTrack == null) {
        break missingId;
      }

      id = R.id.btn_toggle_shuffle_player;
      ImageButton btnToggleShufflePlayer = ViewBindings.findChildViewById(rootView, id);
      if (btnToggleShufflePlayer == null) {
        break missingId;
      }

      id = R.id.btn_toggle_visualizer;
      ImageButton btnToggleVisualizer = ViewBindings.findChildViewById(rootView, id);
      if (btnToggleVisualizer == null) {
        break missingId;
      }

      id = R.id.layout_player_controls;
      LinearLayout layoutPlayerControls = ViewBindings.findChildViewById(rootView, id);
      if (layoutPlayerControls == null) {
        break missingId;
      }

      id = R.id.sb_track_progress;
      SeekBar sbTrackProgress = ViewBindings.findChildViewById(rootView, id);
      if (sbTrackProgress == null) {
        break missingId;
      }

      id = R.id.tv_current_track_info;
      TextView tvCurrentTrackInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentTrackInfo == null) {
        break missingId;
      }

      return new FragmentPlayerBinding((ConstraintLayout) rootView, btnNextTrack, btnPlayPause,
          btnPreviousTrack, btnToggleShufflePlayer, btnToggleVisualizer, layoutPlayerControls,
          sbTrackProgress, tvCurrentTrackInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
